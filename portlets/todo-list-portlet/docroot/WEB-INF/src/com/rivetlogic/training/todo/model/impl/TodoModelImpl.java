/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.rivetlogic.training.todo.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rivetlogic.training.todo.model.Todo;
import com.rivetlogic.training.todo.model.TodoModel;
import com.rivetlogic.training.todo.model.TodoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Todo service. Represents a row in the &quot;training_Todo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rivetlogic.training.todo.model.TodoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TodoImpl}.
 * </p>
 *
 * @author rivetlogic
 * @see TodoImpl
 * @see com.rivetlogic.training.todo.model.Todo
 * @see com.rivetlogic.training.todo.model.TodoModel
 * @generated
 */
@JSON(strict = true)
public class TodoModelImpl extends BaseModelImpl<Todo> implements TodoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a todo model instance should use the {@link com.rivetlogic.training.todo.model.Todo} interface instead.
	 */
	public static final String TABLE_NAME = "training_Todo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "todoId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "taskDescription", Types.VARCHAR },
			{ "finished", Types.BOOLEAN },
			{ "createdDate", Types.TIMESTAMP },
			{ "finishedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table training_Todo (todoId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,taskDescription VARCHAR(75) null,finished BOOLEAN,createdDate DATE null,finishedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table training_Todo";
	public static final String ORDER_BY_JPQL = " ORDER BY todo.createdDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY training_Todo.createdDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rivetlogic.training.todo.model.Todo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rivetlogic.training.todo.model.Todo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rivetlogic.training.todo.model.Todo"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long USERID_COLUMN_BITMASK = 4L;
	public static long CREATEDDATE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Todo toModel(TodoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Todo model = new TodoImpl();

		model.setTodoId(soapModel.getTodoId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setTaskDescription(soapModel.getTaskDescription());
		model.setFinished(soapModel.getFinished());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setFinishedDate(soapModel.getFinishedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Todo> toModels(TodoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Todo> models = new ArrayList<Todo>(soapModels.length);

		for (TodoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rivetlogic.training.todo.model.Todo"));

	public TodoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _todoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTodoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _todoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Todo.class;
	}

	@Override
	public String getModelClassName() {
		return Todo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("todoId", getTodoId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("taskDescription", getTaskDescription());
		attributes.put("finished", getFinished());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("finishedDate", getFinishedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long todoId = (Long)attributes.get("todoId");

		if (todoId != null) {
			setTodoId(todoId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String taskDescription = (String)attributes.get("taskDescription");

		if (taskDescription != null) {
			setTaskDescription(taskDescription);
		}

		Boolean finished = (Boolean)attributes.get("finished");

		if (finished != null) {
			setFinished(finished);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date finishedDate = (Date)attributes.get("finishedDate");

		if (finishedDate != null) {
			setFinishedDate(finishedDate);
		}
	}

	@JSON
	@Override
	public long getTodoId() {
		return _todoId;
	}

	@Override
	public void setTodoId(long todoId) {
		_todoId = todoId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public String getTaskDescription() {
		if (_taskDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _taskDescription;
		}
	}

	@Override
	public void setTaskDescription(String taskDescription) {
		_taskDescription = taskDescription;
	}

	@JSON
	@Override
	public boolean getFinished() {
		return _finished;
	}

	@Override
	public boolean isFinished() {
		return _finished;
	}

	@Override
	public void setFinished(boolean finished) {
		_finished = finished;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_columnBitmask = -1L;

		_createdDate = createdDate;
	}

	@JSON
	@Override
	public Date getFinishedDate() {
		return _finishedDate;
	}

	@Override
	public void setFinishedDate(Date finishedDate) {
		_finishedDate = finishedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Todo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Todo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Todo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TodoImpl todoImpl = new TodoImpl();

		todoImpl.setTodoId(getTodoId());
		todoImpl.setCompanyId(getCompanyId());
		todoImpl.setGroupId(getGroupId());
		todoImpl.setUserId(getUserId());
		todoImpl.setTaskDescription(getTaskDescription());
		todoImpl.setFinished(getFinished());
		todoImpl.setCreatedDate(getCreatedDate());
		todoImpl.setFinishedDate(getFinishedDate());

		todoImpl.resetOriginalValues();

		return todoImpl;
	}

	@Override
	public int compareTo(Todo todo) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedDate(), todo.getCreatedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Todo)) {
			return false;
		}

		Todo todo = (Todo)obj;

		long primaryKey = todo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TodoModelImpl todoModelImpl = this;

		todoModelImpl._originalCompanyId = todoModelImpl._companyId;

		todoModelImpl._setOriginalCompanyId = false;

		todoModelImpl._originalGroupId = todoModelImpl._groupId;

		todoModelImpl._setOriginalGroupId = false;

		todoModelImpl._originalUserId = todoModelImpl._userId;

		todoModelImpl._setOriginalUserId = false;

		todoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Todo> toCacheModel() {
		TodoCacheModel todoCacheModel = new TodoCacheModel();

		todoCacheModel.todoId = getTodoId();

		todoCacheModel.companyId = getCompanyId();

		todoCacheModel.groupId = getGroupId();

		todoCacheModel.userId = getUserId();

		todoCacheModel.taskDescription = getTaskDescription();

		String taskDescription = todoCacheModel.taskDescription;

		if ((taskDescription != null) && (taskDescription.length() == 0)) {
			todoCacheModel.taskDescription = null;
		}

		todoCacheModel.finished = getFinished();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			todoCacheModel.createdDate = createdDate.getTime();
		}
		else {
			todoCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date finishedDate = getFinishedDate();

		if (finishedDate != null) {
			todoCacheModel.finishedDate = finishedDate.getTime();
		}
		else {
			todoCacheModel.finishedDate = Long.MIN_VALUE;
		}

		return todoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{todoId=");
		sb.append(getTodoId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", taskDescription=");
		sb.append(getTaskDescription());
		sb.append(", finished=");
		sb.append(getFinished());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", finishedDate=");
		sb.append(getFinishedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.rivetlogic.training.todo.model.Todo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>todoId</column-name><column-value><![CDATA[");
		sb.append(getTodoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>taskDescription</column-name><column-value><![CDATA[");
		sb.append(getTaskDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finished</column-name><column-value><![CDATA[");
		sb.append(getFinished());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finishedDate</column-name><column-value><![CDATA[");
		sb.append(getFinishedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Todo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Todo.class };
	private long _todoId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _taskDescription;
	private boolean _finished;
	private Date _createdDate;
	private Date _finishedDate;
	private long _columnBitmask;
	private Todo _escapedModel;
}